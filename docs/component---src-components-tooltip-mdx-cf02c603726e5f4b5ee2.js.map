{"version":3,"sources":["webpack:///../src/components/Tooltip.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","of","Tooltip","__position","__code","__scope","Playground","Props","title","isMDXComponent"],"mappings":"sQAQaA,G,UAAe,S,4MAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,MAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,WADR,WAGA,iBAAQ,CACN,GAAM,cADR,cAGA,YAAC,IAAD,CAAOC,GAAIC,IAASF,QAAQ,UAC5B,iBAAQ,CACN,GAAM,eADR,eAGA,YAAC,IAAD,CAAYG,WAAY,EAAGC,OAAQ,+HAAkIC,SAAO,GAC1KN,QACAH,kBACAU,eACAC,UACAL,aAL0K,gBAM1KN,IAN0K,EAO1KH,eAP0K,GAQzKO,QAAQ,eACZ,WACK,OAAO,YAAC,IAAD,CAASQ,MAAM,8BAA8BR,QAAQ,WAC1D,+C,0MAQVH,EAAWY,gBAAiB","file":"component---src-components-tooltip-mdx-cf02c603726e5f4b5ee2.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/guojianqiang/Documents/my-project/little-deer-ui/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport Tooltip from './Tooltip/index.ts';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"tooltip\"\n    }}>{`Tooltip`}</h1>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <Props of={Tooltip} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <Playground __position={1} __code={'() => {\\n  return (\\n    <Tooltip title=\\\"测试tooltip测试tooltip测试tooltip\\\">\\n      <span>测试tooltip</span>\\n    </Tooltip>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Tooltip,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        return <Tooltip title='测试tooltip测试tooltip测试tooltip' mdxType=\"Tooltip\">\n          <span>测试tooltip</span>\n        </Tooltip>;\n      }}\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}