(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{i4AN:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return u})),n.d(t,"default",(function(){return l}));var i=n("Fcif"),o=n("6CzD"),a=n("+I+c"),s=n("mXGw"),r=n("/FXl"),c=n("TjRS"),d=n("ZFoC"),m=n("6wBQ"),u=(n("aD51"),{});void 0!==u&&u&&u===Object(u)&&Object.isExtensible(u)&&!u.hasOwnProperty("__filemeta")&&Object.defineProperty(u,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/components/ViewList.mdx"}});var b={_frontmatter:u},f=c.a;function l(e){var t,n=e.components,l=Object(a.a)(e,["components"]);return Object(r.b)(f,Object(i.a)({},b,l,{components:n,mdxType:"MDXLayout"}),Object(r.b)("h1",{id:"listview"},"ListView"),Object(r.b)("h2",{id:"properties"},"Properties"),Object(r.b)(d.d,{of:m.a,mdxType:"Props"}),Object(r.b)("h2",{id:"basic-usage"},"Basic usage"),Object(r.b)(d.c,{__position:1,__code:"() => {\n  let initList = []\n  for (let i = 0; i < 30; i++) {\n    initList.push({\n      id: Math.random() * 100,\n      name: '测试' + Math.random() * 100,\n    })\n  }\n  const [list, setList] = React.useState(initList)\n  const onLoad = data => {\n    setList([...list, ...data])\n  }\n  const refreshList = data => {\n    setList([...data])\n  }\n  const API = params =>\n    new Promise(resolve => {\n      console.log(params)\n      setTimeout(() => {\n        resolve(initList)\n      }, 1000)\n    })\n  return (\n    <div style={{ height: 600 }}>\n      <ListView getList={onLoad} API={API} refreshList={refreshList}>\n        <div>\n          {list.map((item, index) => (\n            <div key={index}>{item.name + ` ${index}`}</div>\n          ))}\n        </div>\n      </ListView>\n    </div>\n  )\n}",__scope:(t={props:l,DefaultLayout:c.a,Playground:d.c,Props:d.d,ListView:m.a},t.DefaultLayout=c.a,t._frontmatter=u,t),mdxType:"Playground"},(function(){for(var e=[],t=0;t<30;t++)e.push({id:100*Math.random(),name:"测试"+100*Math.random()});var n=s.useState(e),i=n[0],a=n[1];return Object(r.b)("div",{style:{height:600}},Object(r.b)(m.a,{getList:function(e){a([].concat(Object(o.a)(i),Object(o.a)(e)))},API:function(t){return new Promise((function(n){console.log(t),setTimeout((function(){n(e)}),1e3)}))},refreshList:function(e){a(Object(o.a)(e))},mdxType:"ListView"},Object(r.b)("div",null,i.map((function(e,t){return Object(r.b)("div",{key:t},e.name+" "+t)})))))})))}void 0!==l&&l&&l===Object(l)&&Object.isExtensible(l)&&!l.hasOwnProperty("__filemeta")&&Object.defineProperty(l,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/components/ViewList.mdx"}}),l.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-components-view-list-mdx-1f46c6528f6af4bf2a8f.js.map